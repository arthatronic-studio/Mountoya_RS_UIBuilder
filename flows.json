[
    {
        "id": "93cd7eb94b5de81b",
        "type": "tab",
        "label": "Flow 3",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "d578f4fe739b97e1",
        "type": "group",
        "z": "93cd7eb94b5de81b",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "b8c02fcd2c609e5c",
            "c76d1813b12e5438",
            "9385390fe813aad3",
            "aaaf2463dd0534cd",
            "ae945c1acac3f873",
            "58cd9e4840d784ae",
            "996331d83b614a49",
            "aecf70ca0b5e17ee",
            "17ab1c42ddaf528e",
            "758999591f8ebe39",
            "469a305550126563",
            "2b3d8e25f51d2891",
            "8b747e424369f1f9",
            "a2f90802f95ed6ed",
            "cf2b40f45ed03ce3",
            "5abc403c3b97e6f1",
            "b3baee873a06e1eb",
            "37e623f6372fce6f",
            "2495491911df3be4",
            "c02cf9ec2d477c84",
            "394d191e7e96a9a4",
            "680821e32dba97e7",
            "842999d09d5414c6",
            "73b77f45dc231067",
            "1c9aad3d83444baa",
            "134758b8c75a732d",
            "fac80dde8a05bfa6",
            "9860e6549b7ce023",
            "2f065b22bd7d13fd",
            "ce57fc889764cc90",
            "601ead6dbd164430",
            "f5b5f22f06ec8307",
            "eb7f14736e65d017",
            "312281ef99a7932b",
            "3fe8a8f19bd636d7",
            "626ec8f2db706571",
            "a4b0ee05af245390",
            "3b4cd70e6ad09aab",
            "8c9b45ce076a40d1",
            "49cbb5412f98ed27"
        ],
        "x": -16,
        "y": -1,
        "w": 2052,
        "h": 722
    },
    {
        "id": "b8c02fcd2c609e5c",
        "type": "rpi-gpio in",
        "z": "93cd7eb94b5de81b",
        "g": "d578f4fe739b97e1",
        "name": "IR Sensor",
        "pin": "18",
        "intype": "up",
        "debounce": "25",
        "read": false,
        "bcm": true,
        "x": 70,
        "y": 260,
        "wires": [
            [
                "aaaf2463dd0534cd",
                "58cd9e4840d784ae"
            ]
        ]
    },
    {
        "id": "c76d1813b12e5438",
        "type": "inject",
        "z": "93cd7eb94b5de81b",
        "g": "d578f4fe739b97e1",
        "name": "Simulate Sensor (1)",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "str",
        "x": 300,
        "y": 370,
        "wires": [
            [
                "ce57fc889764cc90"
            ]
        ]
    },
    {
        "id": "9385390fe813aad3",
        "type": "inject",
        "z": "93cd7eb94b5de81b",
        "g": "d578f4fe739b97e1",
        "name": "Simulate Sensor (0)",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "str",
        "x": 300,
        "y": 470,
        "wires": [
            [
                "ce57fc889764cc90"
            ]
        ]
    },
    {
        "id": "aaaf2463dd0534cd",
        "type": "debug",
        "z": "93cd7eb94b5de81b",
        "g": "d578f4fe739b97e1",
        "name": "debug 27",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 340,
        "y": 160,
        "wires": []
    },
    {
        "id": "ae945c1acac3f873",
        "type": "change",
        "z": "93cd7eb94b5de81b",
        "g": "d578f4fe739b97e1",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 510,
        "y": 240,
        "wires": [
            [
                "aecf70ca0b5e17ee",
                "ce57fc889764cc90"
            ]
        ]
    },
    {
        "id": "58cd9e4840d784ae",
        "type": "switch",
        "z": "93cd7eb94b5de81b",
        "g": "d578f4fe739b97e1",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 320,
        "y": 280,
        "wires": [
            [
                "ae945c1acac3f873"
            ],
            [
                "996331d83b614a49"
            ]
        ]
    },
    {
        "id": "996331d83b614a49",
        "type": "change",
        "z": "93cd7eb94b5de81b",
        "g": "d578f4fe739b97e1",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 510,
        "y": 300,
        "wires": [
            [
                "aecf70ca0b5e17ee",
                "ce57fc889764cc90"
            ]
        ]
    },
    {
        "id": "aecf70ca0b5e17ee",
        "type": "debug",
        "z": "93cd7eb94b5de81b",
        "g": "d578f4fe739b97e1",
        "name": "debug 28",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 750,
        "y": 160,
        "wires": []
    },
    {
        "id": "17ab1c42ddaf528e",
        "type": "switch",
        "z": "93cd7eb94b5de81b",
        "g": "d578f4fe739b97e1",
        "name": "Switch on type",
        "property": "payload.type",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "button1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "button2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "button3",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "button4",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "button5",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "button6",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 6,
        "x": 960,
        "y": 260,
        "wires": [
            [
                "5abc403c3b97e6f1"
            ],
            [
                "758999591f8ebe39",
                "49cbb5412f98ed27"
            ],
            [
                "469a305550126563"
            ],
            [
                "134758b8c75a732d"
            ],
            [
                "c02cf9ec2d477c84"
            ],
            [
                "394d191e7e96a9a4"
            ]
        ]
    },
    {
        "id": "758999591f8ebe39",
        "type": "function",
        "z": "93cd7eb94b5de81b",
        "g": "d578f4fe739b97e1",
        "name": "Button 2 Action 250 ml normal",
        "func": "msg.payload = 5\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1410,
        "y": 160,
        "wires": [
            [
                "2b3d8e25f51d2891",
                "2495491911df3be4"
            ]
        ]
    },
    {
        "id": "469a305550126563",
        "type": "function",
        "z": "93cd7eb94b5de81b",
        "g": "d578f4fe739b97e1",
        "name": "Button 3 Action 250 ml cold",
        "func": "msg.payload = 5.5\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1400,
        "y": 220,
        "wires": [
            [
                "8b747e424369f1f9",
                "a2f90802f95ed6ed"
            ]
        ]
    },
    {
        "id": "2b3d8e25f51d2891",
        "type": "debug",
        "z": "93cd7eb94b5de81b",
        "g": "d578f4fe739b97e1",
        "name": "Debug Button 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1780,
        "y": 120,
        "wires": []
    },
    {
        "id": "8b747e424369f1f9",
        "type": "debug",
        "z": "93cd7eb94b5de81b",
        "g": "d578f4fe739b97e1",
        "name": "Debug Button 3",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 1700,
        "y": 200,
        "wires": []
    },
    {
        "id": "a2f90802f95ed6ed",
        "type": "function",
        "z": "93cd7eb94b5de81b",
        "g": "d578f4fe739b97e1",
        "name": "Set Relay Time",
        "func": "\nlet pin_IR = 18;\nlet pin_Relay = 25;\nlet count = 0;\nlet timer = msg.payload * 1000;\nlet counting = false;\nlet prevCount = 0;\nlet state_IR = 0;\n\nconst IR = new onoff.Gpio(pin_IR, 'in', 'both');\nconst Relay = new onoff.Gpio(pin_Relay, 'out');\n\nfunction readIR() {\n    if (IR.readSync() === 1) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}\n\nfunction writeRelay(value) {\n    if (value === 'ON') {\n        Relay.writeSync(1);\n    }\n    else {\n        Relay.writeSync(0);\n    }\n}\n\nstate_IR = IR.readSync();\nprevCount = Date.now();\ncount = 0;\n\nwhile (count < timer) {\n    state_IR = IR.readSync();\n    if (state_IR === 1) {\n        if (!counting) {\n            counting = true;\n            prevCount = Date.now() - count;\n        }\n        count = Date.now() - prevCount;\n        Relay.writeSync(1);\n    }\n    else {\n        if (counting) {\n            counting = false;\n        }\n        Relay.writeSync(0);\n    }\n    // setTimeout(() => {\n    //     count += 10;\n    // }, 10);\n}\n\nRelay.writeSync(0);\n\nmsg.payload = 'done'\n\n\nreturn msg",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "onoff",
                "module": "onoff"
            }
        ],
        "x": 1700,
        "y": 240,
        "wires": [
            [
                "cf2b40f45ed03ce3",
                "312281ef99a7932b"
            ]
        ]
    },
    {
        "id": "cf2b40f45ed03ce3",
        "type": "debug",
        "z": "93cd7eb94b5de81b",
        "g": "d578f4fe739b97e1",
        "name": "debug 29",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1890,
        "y": 340,
        "wires": []
    },
    {
        "id": "5abc403c3b97e6f1",
        "type": "function",
        "z": "93cd7eb94b5de81b",
        "g": "d578f4fe739b97e1",
        "name": "Button 1 Action 250 ml hot",
        "func": "msg.payload = 4\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1410,
        "y": 120,
        "wires": [
            [
                "b3baee873a06e1eb",
                "37e623f6372fce6f"
            ]
        ]
    },
    {
        "id": "b3baee873a06e1eb",
        "type": "function",
        "z": "93cd7eb94b5de81b",
        "g": "d578f4fe739b97e1",
        "name": "Set Relay Time",
        "func": "\nlet pin_IR = 18;\nlet pin_Relay = 8;\nlet count = 0;\nlet timer = msg.payload * 1000;\nlet counting = false;\nlet prevCount = 0;\nlet state_IR = 0;\n\nconst IR = new onoff.Gpio(pin_IR, 'in', 'both');\nconst Relay = new onoff.Gpio(pin_Relay, 'out');\n\nfunction readIR() {\n    if (IR.readSync() === 1) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}\n\nfunction writeRelay(value) {\n    if (value === 'ON') {\n        Relay.writeSync(1);\n    }\n    else {\n        Relay.writeSync(0);\n    }\n}\n\nstate_IR = IR.readSync();\nprevCount = Date.now();\ncount = 0;\n\nwhile (count < timer) {\n    state_IR = IR.readSync();\n    if (state_IR === 1) {\n        if (!counting) {\n            counting = true;\n            prevCount = Date.now() - count;\n        }\n        count = Date.now() - prevCount;\n        Relay.writeSync(1);\n    }\n    else {\n        if (counting) {\n            counting = false;\n        }\n        Relay.writeSync(0);\n    }\n    // setTimeout(() => {\n    //     count += 10;\n    // }, 10);\n}\n\nRelay.writeSync(0);\n\nmsg.payload = 'done'\n\n\nreturn msg",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "onoff",
                "module": "onoff"
            }
        ],
        "x": 1705.6666259765625,
        "y": 85.6666259765625,
        "wires": [
            [
                "f5b5f22f06ec8307"
            ]
        ]
    },
    {
        "id": "37e623f6372fce6f",
        "type": "debug",
        "z": "93cd7eb94b5de81b",
        "g": "d578f4fe739b97e1",
        "name": "debug button 1",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1720,
        "y": 40,
        "wires": []
    },
    {
        "id": "2495491911df3be4",
        "type": "function",
        "z": "93cd7eb94b5de81b",
        "g": "d578f4fe739b97e1",
        "name": "Set Relay Time",
        "func": "\nlet pin_IR = 18;\nlet pin_Relay = 25;\nlet count = 0;\nlet timer = msg.payload * 1000;\nlet counting = false;\nlet prevCount = 0;\nlet state_IR = 0;\n\nconst IR = new onoff.Gpio(pin_IR, 'in', 'both');\nconst Relay = new onoff.Gpio(pin_Relay, 'out');\n\nfunction readIR() {\n    if (IR.readSync() === 1) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}\n\nfunction writeRelay(value) {\n    if (value === 'ON') {\n        Relay.writeSync(1);\n    }\n    else {\n        Relay.writeSync(0);\n    }\n}\n\nstate_IR = IR.readSync();\nprevCount = Date.now();\ncount = 0;\n\nwhile (count < timer) {\n    state_IR = IR.readSync();\n    if (state_IR === 1) {\n        if (!counting) {\n            counting = true;\n            prevCount = Date.now() - count;\n        }\n        count = Date.now() - prevCount;\n        Relay.writeSync(1);\n    }\n    else {\n        if (counting) {\n            counting = false;\n        }\n        Relay.writeSync(0);\n    }\n    // setTimeout(() => {\n    //     count += 10;\n    // }, 10);\n}\n\nRelay.writeSync(0);\n\nmsg.payload = 'done'\n\n\nreturn msg",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "onoff",
                "module": "onoff"
            }
        ],
        "x": 1780,
        "y": 160,
        "wires": [
            [
                "eb7f14736e65d017"
            ]
        ]
    },
    {
        "id": "c02cf9ec2d477c84",
        "type": "function",
        "z": "93cd7eb94b5de81b",
        "g": "d578f4fe739b97e1",
        "name": "Button 5 Action 500 ml normal",
        "func": "msg.payload = 20",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1290,
        "y": 400,
        "wires": [
            [
                "680821e32dba97e7",
                "2f065b22bd7d13fd"
            ]
        ]
    },
    {
        "id": "394d191e7e96a9a4",
        "type": "function",
        "z": "93cd7eb94b5de81b",
        "g": "d578f4fe739b97e1",
        "name": "Button 6 Action 500 ml cold",
        "func": "msg.payload = 11\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1260,
        "y": 480,
        "wires": [
            [
                "842999d09d5414c6",
                "73b77f45dc231067"
            ]
        ]
    },
    {
        "id": "680821e32dba97e7",
        "type": "debug",
        "z": "93cd7eb94b5de81b",
        "g": "d578f4fe739b97e1",
        "name": "Debug Button 5",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1640,
        "y": 400,
        "wires": []
    },
    {
        "id": "842999d09d5414c6",
        "type": "debug",
        "z": "93cd7eb94b5de81b",
        "g": "d578f4fe739b97e1",
        "name": "Debug Button 6",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1640,
        "y": 480,
        "wires": []
    },
    {
        "id": "73b77f45dc231067",
        "type": "function",
        "z": "93cd7eb94b5de81b",
        "g": "d578f4fe739b97e1",
        "name": "Set Relay Time",
        "func": "\nlet pin_IR = 18;\nlet pin_Relay = 25;\nlet count = 0;\nlet timer = msg.payload * 1000;\nlet counting = false;\nlet prevCount = 0;\nlet state_IR = 0;\n\nconst IR = new onoff.Gpio(pin_IR, 'in', 'both');\nconst Relay = new onoff.Gpio(pin_Relay, 'out');\n\nfunction readIR() {\n    if (IR.readSync() === 1) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}\n\nfunction writeRelay(value) {\n    if (value === 'ON') {\n        Relay.writeSync(1);\n    }\n    else {\n        Relay.writeSync(0);\n    }\n}\n\nstate_IR = IR.readSync();\nprevCount = Date.now();\ncount = 0;\n\nwhile (count < timer) {\n    state_IR = IR.readSync();\n    if (state_IR === 1) {\n        if (!counting) {\n            counting = true;\n            prevCount = Date.now() - count;\n        }\n        count = Date.now() - prevCount;\n        Relay.writeSync(1);\n    }\n    else {\n        if (counting) {\n            counting = false;\n        }\n        Relay.writeSync(0);\n    }\n    // setTimeout(() => {\n    //     count += 10;\n    // }, 10);\n}\n\nRelay.writeSync(0);\n\nmsg.payload = 'done'\n\n\nreturn msg",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "onoff",
                "module": "onoff"
            }
        ],
        "x": 1640,
        "y": 520,
        "wires": [
            [
                "1c9aad3d83444baa",
                "a4b0ee05af245390"
            ]
        ]
    },
    {
        "id": "1c9aad3d83444baa",
        "type": "debug",
        "z": "93cd7eb94b5de81b",
        "g": "d578f4fe739b97e1",
        "name": "debug 33",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1840,
        "y": 680,
        "wires": []
    },
    {
        "id": "134758b8c75a732d",
        "type": "function",
        "z": "93cd7eb94b5de81b",
        "g": "d578f4fe739b97e1",
        "name": "Button 4 Action 500 ml hot",
        "func": "msg.payload = 10\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1270,
        "y": 340,
        "wires": [
            [
                "fac80dde8a05bfa6",
                "9860e6549b7ce023"
            ]
        ]
    },
    {
        "id": "fac80dde8a05bfa6",
        "type": "function",
        "z": "93cd7eb94b5de81b",
        "g": "d578f4fe739b97e1",
        "name": "Set Relay Time",
        "func": "\nlet pin_IR = 17;\nlet pin_Relay = 18;\nlet count = 0;\nlet timer = msg.payload * 1000;\nlet counting = false;\nlet prevCount = 0;\nlet state_IR = 0;\n\nconst IR = new onoff.Gpio(pin_IR, 'in', 'both');\nconst Relay = new onoff.Gpio(pin_Relay, 'out');\n\nfunction readIR() {\n    if (IR.readSync() === 1) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}\n\nfunction writeRelay(value) {\n    if (value === 'ON') {\n        Relay.writeSync(1);\n    }\n    else {\n        Relay.writeSync(0);\n    }\n}\n\nstate_IR = IR.readSync();\nprevCount = Date.now();\ncount = 0;\n\nwhile (count < timer) {\n    state_IR = IR.readSync();\n    if (state_IR === 1) {\n        if (!counting) {\n            counting = true;\n            prevCount = Date.now() - count;\n        }\n        count = Date.now() - prevCount;\n        Relay.writeSync(1);\n    }\n    else {\n        if (counting) {\n            counting = false;\n        }\n        Relay.writeSync(0);\n    }\n    // setTimeout(() => {\n    //     count += 10;\n    // }, 10);\n}\n\nRelay.writeSync(0);\n\nmsg.payload = 'done'\n\n\nreturn msg",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "onoff",
                "module": "onoff"
            }
        ],
        "x": 1640,
        "y": 340,
        "wires": [
            [
                "3fe8a8f19bd636d7"
            ]
        ]
    },
    {
        "id": "9860e6549b7ce023",
        "type": "debug",
        "z": "93cd7eb94b5de81b",
        "g": "d578f4fe739b97e1",
        "name": "debug 4",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1640,
        "y": 300,
        "wires": []
    },
    {
        "id": "2f065b22bd7d13fd",
        "type": "function",
        "z": "93cd7eb94b5de81b",
        "g": "d578f4fe739b97e1",
        "name": "Set Relay Time",
        "func": "\nlet pin_IR = 17;\nlet pin_Relay = 18;\nlet count = 0;\nlet timer = msg.payload * 1000;\nlet counting = false;\nlet prevCount = 0;\nlet state_IR = 0;\n\nconst IR = new onoff.Gpio(pin_IR, 'in', 'both');\nconst Relay = new onoff.Gpio(pin_Relay, 'out');\n\nfunction readIR() {\n    if (IR.readSync() === 1) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}\n\nfunction writeRelay(value) {\n    if (value === 'ON') {\n        Relay.writeSync(1);\n    }\n    else {\n        Relay.writeSync(0);\n    }\n}\n\nstate_IR = IR.readSync();\nprevCount = Date.now();\ncount = 0;\n\nwhile (count < timer) {\n    state_IR = IR.readSync();\n    if (state_IR === 1) {\n        if (!counting) {\n            counting = true;\n            prevCount = Date.now() - count;\n        }\n        count = Date.now() - prevCount;\n        Relay.writeSync(1);\n    }\n    else {\n        if (counting) {\n            counting = false;\n        }\n        Relay.writeSync(0);\n    }\n    // setTimeout(() => {\n    //     count += 10;\n    // }, 10);\n}\n\nRelay.writeSync(0);\n\nmsg.payload = 'done'\n\n\nreturn msg",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "onoff",
                "module": "onoff"
            }
        ],
        "x": 1660,
        "y": 440,
        "wires": [
            [
                "626ec8f2db706571"
            ]
        ]
    },
    {
        "id": "ce57fc889764cc90",
        "type": "uibuilder",
        "z": "93cd7eb94b5de81b",
        "g": "d578f4fe739b97e1",
        "name": "",
        "topic": "",
        "url": "refill",
        "okToGo": true,
        "fwdInMessages": false,
        "allowScripts": false,
        "allowStyles": false,
        "copyIndex": true,
        "templateFolder": "blank",
        "extTemplate": "",
        "showfolder": false,
        "reload": false,
        "sourceFolder": "src",
        "deployedVersion": "6.8.2",
        "showMsgUib": false,
        "title": "",
        "descr": "",
        "x": 790,
        "y": 280,
        "wires": [
            [
                "17ab1c42ddaf528e"
            ],
            []
        ]
    },
    {
        "id": "601ead6dbd164430",
        "type": "link in",
        "z": "93cd7eb94b5de81b",
        "g": "d578f4fe739b97e1",
        "name": "link in 2",
        "links": [
            "f5b5f22f06ec8307",
            "eb7f14736e65d017",
            "312281ef99a7932b",
            "3fe8a8f19bd636d7",
            "626ec8f2db706571",
            "a4b0ee05af245390"
        ],
        "x": 625,
        "y": 420,
        "wires": [
            [
                "ce57fc889764cc90"
            ]
        ]
    },
    {
        "id": "f5b5f22f06ec8307",
        "type": "link out",
        "z": "93cd7eb94b5de81b",
        "g": "d578f4fe739b97e1",
        "name": "link out 5",
        "mode": "link",
        "links": [
            "601ead6dbd164430"
        ],
        "x": 1995,
        "y": 40,
        "wires": []
    },
    {
        "id": "eb7f14736e65d017",
        "type": "link out",
        "z": "93cd7eb94b5de81b",
        "g": "d578f4fe739b97e1",
        "name": "link out 7",
        "mode": "link",
        "links": [
            "601ead6dbd164430"
        ],
        "x": 1985,
        "y": 160,
        "wires": []
    },
    {
        "id": "312281ef99a7932b",
        "type": "link out",
        "z": "93cd7eb94b5de81b",
        "g": "d578f4fe739b97e1",
        "name": "link out 8",
        "mode": "link",
        "links": [
            "601ead6dbd164430"
        ],
        "x": 1965,
        "y": 240,
        "wires": []
    },
    {
        "id": "3fe8a8f19bd636d7",
        "type": "link out",
        "z": "93cd7eb94b5de81b",
        "g": "d578f4fe739b97e1",
        "name": "link out 9",
        "mode": "link",
        "links": [
            "601ead6dbd164430"
        ],
        "x": 1785,
        "y": 340,
        "wires": []
    },
    {
        "id": "626ec8f2db706571",
        "type": "link out",
        "z": "93cd7eb94b5de81b",
        "g": "d578f4fe739b97e1",
        "name": "link out 10",
        "mode": "link",
        "links": [
            "601ead6dbd164430"
        ],
        "x": 1885,
        "y": 440,
        "wires": []
    },
    {
        "id": "a4b0ee05af245390",
        "type": "link out",
        "z": "93cd7eb94b5de81b",
        "g": "d578f4fe739b97e1",
        "name": "link out 11",
        "mode": "link",
        "links": [
            "601ead6dbd164430"
        ],
        "x": 1885,
        "y": 520,
        "wires": []
    },
    {
        "id": "3b4cd70e6ad09aab",
        "type": "inject",
        "z": "93cd7eb94b5de81b",
        "g": "d578f4fe739b97e1",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "v": "1",
                "vt": "num"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 130,
        "y": 200,
        "wires": [
            [
                "58cd9e4840d784ae"
            ]
        ]
    },
    {
        "id": "8c9b45ce076a40d1",
        "type": "inject",
        "z": "93cd7eb94b5de81b",
        "g": "d578f4fe739b97e1",
        "name": "Simulate Sensor (done)",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "done",
        "payloadType": "str",
        "x": 360,
        "y": 560,
        "wires": [
            [
                "ce57fc889764cc90"
            ]
        ]
    },
    {
        "id": "49cbb5412f98ed27",
        "type": "debug",
        "z": "93cd7eb94b5de81b",
        "g": "d578f4fe739b97e1",
        "name": "debug 100",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1110,
        "y": 100,
        "wires": []
    }
]