[
    {
        "id": "93cd7eb94b5de81b",
        "type": "tab",
        "label": "Flow 3",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "d578f4fe739b97e1",
        "type": "group",
        "z": "93cd7eb94b5de81b",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "b8c02fcd2c609e5c",
            "c76d1813b12e5438",
            "9385390fe813aad3",
            "ae945c1acac3f873",
            "58cd9e4840d784ae",
            "996331d83b614a49",
            "17ab1c42ddaf528e",
            "758999591f8ebe39",
            "469a305550126563",
            "5abc403c3b97e6f1",
            "c02cf9ec2d477c84",
            "394d191e7e96a9a4",
            "134758b8c75a732d",
            "ce57fc889764cc90",
            "601ead6dbd164430",
            "f5b5f22f06ec8307",
            "eb7f14736e65d017",
            "312281ef99a7932b",
            "3fe8a8f19bd636d7",
            "626ec8f2db706571",
            "a4b0ee05af245390",
            "8c9b45ce076a40d1",
            "1542bb694a175939",
            "f4c26c95e4142031",
            "d9fdcdddae92825b",
            "8180848f581502a1",
            "e70a7eac5aa1292c",
            "8a9efa6ca4907eb8",
            "4095d80339d4fc03",
            "dc639336ccb6d507",
            "7de43cfe5c5c9225",
            "497afc4d7511892e",
            "5dce08f35cb8b6cf",
            "cfa57155488fe092",
            "46bc2f93d48c087d",
            "42138cb1cb3b3dcd",
            "f7de393883dfc617",
            "9e715bfcb567f4aa",
            "efe3c3732c955c74",
            "a8636767bc04eb79",
            "5148348cc78f8dd2"
        ],
        "x": 74,
        "y": -1,
        "w": 1842,
        "h": 602
    },
    {
        "id": "f7de393883dfc617",
        "type": "file",
        "z": "93cd7eb94b5de81b",
        "g": "d578f4fe739b97e1",
        "name": "Log Data",
        "filename": "/home/arthatronic/Documents/log_rs.csv",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 780,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "b8c02fcd2c609e5c",
        "type": "rpi-gpio in",
        "z": "93cd7eb94b5de81b",
        "g": "d578f4fe739b97e1",
        "name": "IR Sensor",
        "pin": "18",
        "intype": "up",
        "debounce": "25",
        "read": false,
        "bcm": true,
        "x": 160,
        "y": 280,
        "wires": [
            [
                "58cd9e4840d784ae"
            ]
        ]
    },
    {
        "id": "c76d1813b12e5438",
        "type": "inject",
        "z": "93cd7eb94b5de81b",
        "g": "d578f4fe739b97e1",
        "name": "Simulate Sensor (1)",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "str",
        "x": 310,
        "y": 420,
        "wires": [
            [
                "ce57fc889764cc90"
            ]
        ]
    },
    {
        "id": "9385390fe813aad3",
        "type": "inject",
        "z": "93cd7eb94b5de81b",
        "g": "d578f4fe739b97e1",
        "name": "Simulate Sensor (0)",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "str",
        "x": 310,
        "y": 460,
        "wires": [
            [
                "ce57fc889764cc90"
            ]
        ]
    },
    {
        "id": "ae945c1acac3f873",
        "type": "change",
        "z": "93cd7eb94b5de81b",
        "g": "d578f4fe739b97e1",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 500,
        "y": 260,
        "wires": [
            [
                "ce57fc889764cc90"
            ]
        ]
    },
    {
        "id": "58cd9e4840d784ae",
        "type": "switch",
        "z": "93cd7eb94b5de81b",
        "g": "d578f4fe739b97e1",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 320,
        "y": 280,
        "wires": [
            [
                "ae945c1acac3f873"
            ],
            [
                "996331d83b614a49"
            ]
        ]
    },
    {
        "id": "996331d83b614a49",
        "type": "change",
        "z": "93cd7eb94b5de81b",
        "g": "d578f4fe739b97e1",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 500,
        "y": 300,
        "wires": [
            [
                "ce57fc889764cc90"
            ]
        ]
    },
    {
        "id": "17ab1c42ddaf528e",
        "type": "switch",
        "z": "93cd7eb94b5de81b",
        "g": "d578f4fe739b97e1",
        "name": "Switch on type",
        "property": "payload.type",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "button1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "button2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "button3",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "button4",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "button5",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "button6",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "reset",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 7,
        "x": 1120,
        "y": 240,
        "wires": [
            [
                "5abc403c3b97e6f1"
            ],
            [
                "758999591f8ebe39"
            ],
            [
                "469a305550126563"
            ],
            [
                "134758b8c75a732d"
            ],
            [
                "c02cf9ec2d477c84"
            ],
            [
                "394d191e7e96a9a4"
            ],
            [
                "46bc2f93d48c087d"
            ]
        ]
    },
    {
        "id": "758999591f8ebe39",
        "type": "function",
        "z": "93cd7eb94b5de81b",
        "g": "d578f4fe739b97e1",
        "name": "Button 2 Action 250 ml normal",
        "func": "msg.payload = 6\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1450,
        "y": 160,
        "wires": [
            [
                "4095d80339d4fc03"
            ]
        ]
    },
    {
        "id": "469a305550126563",
        "type": "function",
        "z": "93cd7eb94b5de81b",
        "g": "d578f4fe739b97e1",
        "name": "Button 3 Action 250 ml cold",
        "func": "// msg.payload = 6 // Calibrated\nmsg.payload = 4\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1440,
        "y": 200,
        "wires": [
            [
                "dc639336ccb6d507"
            ]
        ]
    },
    {
        "id": "5abc403c3b97e6f1",
        "type": "function",
        "z": "93cd7eb94b5de81b",
        "g": "d578f4fe739b97e1",
        "name": "Button 1 Action 250 ml hot",
        "func": "msg.payload = 7\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1430,
        "y": 120,
        "wires": [
            [
                "8a9efa6ca4907eb8"
            ]
        ]
    },
    {
        "id": "c02cf9ec2d477c84",
        "type": "function",
        "z": "93cd7eb94b5de81b",
        "g": "d578f4fe739b97e1",
        "name": "Button 5 Action 500 ml normal",
        "func": "msg.payload = 11.5\nreturn msg",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1450,
        "y": 300,
        "wires": [
            [
                "497afc4d7511892e"
            ]
        ]
    },
    {
        "id": "394d191e7e96a9a4",
        "type": "function",
        "z": "93cd7eb94b5de81b",
        "g": "d578f4fe739b97e1",
        "name": "Button 6 Action 500 ml cold",
        "func": "// msg.payload = 12.5 // Calibrated\nmsg.payload = 10\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1440,
        "y": 340,
        "wires": [
            [
                "5dce08f35cb8b6cf"
            ]
        ]
    },
    {
        "id": "134758b8c75a732d",
        "type": "function",
        "z": "93cd7eb94b5de81b",
        "g": "d578f4fe739b97e1",
        "name": "Button 4 Action 500 ml hot",
        "func": "msg.payload = 14\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1430,
        "y": 260,
        "wires": [
            [
                "7de43cfe5c5c9225"
            ]
        ]
    },
    {
        "id": "ce57fc889764cc90",
        "type": "uibuilder",
        "z": "93cd7eb94b5de81b",
        "g": "d578f4fe739b97e1",
        "name": "",
        "topic": "",
        "url": "refill",
        "okToGo": true,
        "fwdInMessages": false,
        "allowScripts": false,
        "allowStyles": false,
        "copyIndex": true,
        "templateFolder": "blank",
        "extTemplate": "",
        "showfolder": false,
        "reload": false,
        "sourceFolder": "src",
        "deployedVersion": "6.8.2",
        "showMsgUib": false,
        "title": "",
        "descr": "",
        "x": 790,
        "y": 280,
        "wires": [
            [
                "17ab1c42ddaf528e"
            ],
            []
        ]
    },
    {
        "id": "601ead6dbd164430",
        "type": "link in",
        "z": "93cd7eb94b5de81b",
        "g": "d578f4fe739b97e1",
        "name": "link in 2",
        "links": [
            "f5b5f22f06ec8307",
            "eb7f14736e65d017",
            "312281ef99a7932b",
            "3fe8a8f19bd636d7",
            "626ec8f2db706571",
            "a4b0ee05af245390"
        ],
        "x": 495,
        "y": 560,
        "wires": [
            [
                "ce57fc889764cc90",
                "04e96e931192cd25"
            ]
        ]
    },
    {
        "id": "f5b5f22f06ec8307",
        "type": "link out",
        "z": "93cd7eb94b5de81b",
        "g": "d578f4fe739b97e1",
        "name": "link out 5",
        "mode": "link",
        "links": [
            "601ead6dbd164430"
        ],
        "x": 1875,
        "y": 120,
        "wires": []
    },
    {
        "id": "eb7f14736e65d017",
        "type": "link out",
        "z": "93cd7eb94b5de81b",
        "g": "d578f4fe739b97e1",
        "name": "link out 7",
        "mode": "link",
        "links": [
            "601ead6dbd164430"
        ],
        "x": 1875,
        "y": 160,
        "wires": []
    },
    {
        "id": "312281ef99a7932b",
        "type": "link out",
        "z": "93cd7eb94b5de81b",
        "g": "d578f4fe739b97e1",
        "name": "link out 8",
        "mode": "link",
        "links": [
            "601ead6dbd164430"
        ],
        "x": 1875,
        "y": 200,
        "wires": []
    },
    {
        "id": "3fe8a8f19bd636d7",
        "type": "link out",
        "z": "93cd7eb94b5de81b",
        "g": "d578f4fe739b97e1",
        "name": "link out 9",
        "mode": "link",
        "links": [
            "601ead6dbd164430"
        ],
        "x": 1875,
        "y": 260,
        "wires": []
    },
    {
        "id": "626ec8f2db706571",
        "type": "link out",
        "z": "93cd7eb94b5de81b",
        "g": "d578f4fe739b97e1",
        "name": "link out 10",
        "mode": "link",
        "links": [
            "601ead6dbd164430"
        ],
        "x": 1875,
        "y": 300,
        "wires": []
    },
    {
        "id": "a4b0ee05af245390",
        "type": "link out",
        "z": "93cd7eb94b5de81b",
        "g": "d578f4fe739b97e1",
        "name": "link out 11",
        "mode": "link",
        "links": [
            "601ead6dbd164430"
        ],
        "x": 1875,
        "y": 340,
        "wires": []
    },
    {
        "id": "8c9b45ce076a40d1",
        "type": "inject",
        "z": "93cd7eb94b5de81b",
        "g": "d578f4fe739b97e1",
        "name": "Simulate Sensor (done)",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "done",
        "payloadType": "str",
        "x": 320,
        "y": 500,
        "wires": [
            [
                "ce57fc889764cc90"
            ]
        ]
    },
    {
        "id": "1542bb694a175939",
        "type": "rpi-gpio out",
        "z": "93cd7eb94b5de81b",
        "g": "d578f4fe739b97e1",
        "name": "",
        "pin": "8",
        "set": true,
        "level": "0",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 520,
        "y": 40,
        "wires": []
    },
    {
        "id": "f4c26c95e4142031",
        "type": "rpi-gpio out",
        "z": "93cd7eb94b5de81b",
        "g": "d578f4fe739b97e1",
        "name": "",
        "pin": "25",
        "set": true,
        "level": "0",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 380,
        "y": 40,
        "wires": []
    },
    {
        "id": "d9fdcdddae92825b",
        "type": "rpi-gpio out",
        "z": "93cd7eb94b5de81b",
        "g": "d578f4fe739b97e1",
        "name": "",
        "pin": "24",
        "set": true,
        "level": "0",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 240,
        "y": 40,
        "wires": []
    },
    {
        "id": "8180848f581502a1",
        "type": "rpi-gpio in",
        "z": "93cd7eb94b5de81b",
        "g": "d578f4fe739b97e1",
        "name": "",
        "pin": "16",
        "intype": "up",
        "debounce": "25",
        "read": false,
        "bcm": true,
        "x": 720,
        "y": 440,
        "wires": [
            [
                "e70a7eac5aa1292c"
            ]
        ]
    },
    {
        "id": "e70a7eac5aa1292c",
        "type": "function",
        "z": "93cd7eb94b5de81b",
        "g": "d578f4fe739b97e1",
        "name": "waterflow_Function v2",
        "func": "\n\nlet pulseCount = context.get('pulseCount') || 0;\nlet totalLiters = context.get('totalLiters') || 0;\nlet volumeliters = context.get('volumeliters') || 0;\nconst calibrationFactor = 1; // Ganti dengan faktor kalibrasi sensor Anda\n\nif (msg.payload === \"resetWaterFlow\") {\n    totalLiters = 0;\n    volumeliters = 0;\n} \n\n// Menghitung aliran dan total liter setiap detik\nif (msg.payload === 1) { // Sensor mengirimkan pulsa (misalnya, 1) setiap kali terjadi\n    pulseCount++;\n}\n\nconst duration = 1.0; // durasi dalam detik\nlet flowRate = (pulseCount / calibrationFactor); // aliran dalam liter per detik\ntotalLiters += flowRate * duration; // hitung total liter yang sudah mengalir\n// volumeliters = totalLiters;\nlet sendPulse = pulseCount;\nvolumeliters = totalLiters;\n\npulseCount = 0; // reset pulse count\n\n// Simpan nilai di context\ncontext.set('pulseCount', pulseCount);\ncontext.set('totalLiters', totalLiters);\ncontext.set('volumeliters', volumeliters);\n\nmsg.payload = {\n    flowRate: flowRate.toFixed(2),\n    totalLiters: totalLiters.toFixed(2),\n    volumeliters: volumeliters,\n    // volumeliters: sendPulse\n};\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 440,
        "wires": [
            [
                "ce57fc889764cc90",
                "9e715bfcb567f4aa"
            ]
        ]
    },
    {
        "id": "8a9efa6ca4907eb8",
        "type": "function",
        "z": "93cd7eb94b5de81b",
        "g": "d578f4fe739b97e1",
        "name": "Set Relay Time",
        "func": "\nlet pin_IR_ATAS = 18;\nlet pin_IR_BAWAH = 23;\nlet pin_Relay = 8;\nlet count = 0;\nlet timer = msg.payload * 1000;\nlet counting = false;\nlet prevCount = 0;\nlet state_IR_ATAS = 0;\nlet state_IR_BAWAH = 0;\n\nconst IR_ATAS = new onoff.Gpio(pin_IR_ATAS, 'in', 'both');\nconst IR_BAWAH = new onoff.Gpio(pin_IR_BAWAH, 'in', 'both');\nconst Relay = new onoff.Gpio(pin_Relay, 'out');\n\nstate_IR_ATAS = IR_ATAS.readSync();\nstate_IR_BAWAH = IR_BAWAH.readSync();\nprevCount = Date.now();\nlet stopTimer = Date.now();\ncount = 0;\n\nwhile (count < timer && Date.now()-stopTimer < 5000) {\n    state_IR_ATAS = IR_ATAS.readSync();\n    state_IR_BAWAH = IR_BAWAH.readSync();\n    if (state_IR_ATAS === 1 || state_IR_BAWAH === 1) {\n        if (!counting) {\n            counting = true;\n            prevCount = Date.now() - count;\n        }\n        stopTimer = Date.now();\n        count = Date.now() - prevCount;\n        Relay.writeSync(1);\n    }\n    else {\n        if (counting) {\n            counting = false;\n        }\n        Relay.writeSync(0);\n    }\n    // setTimeout(() => {\n    //     count += 10;\n    // }, 10);\n}\n\nRelay.writeSync(0);\n\nconst d = new Date();\n\nmsg.payload = {\n    finish: 'done',\n    time: d.getHours() + \":\" + d.getMinutes() + \":\" + d.getSeconds(),\n    date: d.getFullYear() + \"-\" + d.getMonth() + \"-\" + d.getDate(),\n    volume: 250,\n    temperature: 'hot'\n}\n\n\nreturn msg",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "onoff",
                "module": "onoff"
            }
        ],
        "x": 1720,
        "y": 120,
        "wires": [
            [
                "f5b5f22f06ec8307"
            ]
        ]
    },
    {
        "id": "4095d80339d4fc03",
        "type": "function",
        "z": "93cd7eb94b5de81b",
        "g": "d578f4fe739b97e1",
        "name": "Set Relay Time",
        "func": "\nlet pin_IR_ATAS = 18;\nlet pin_IR_BAWAH = 23;\nlet pin_Relay = 25;\nlet count = 0;\nlet timer = msg.payload * 1000;\nlet counting = false;\nlet prevCount = 0;\nlet state_IR_ATAS = 0;\nlet state_IR_BAWAH = 0;\n\nconst IR_ATAS = new onoff.Gpio(pin_IR_ATAS, 'in', 'both');\nconst IR_BAWAH = new onoff.Gpio(pin_IR_BAWAH, 'in', 'both');\nconst Relay = new onoff.Gpio(pin_Relay, 'out');\n\nstate_IR_ATAS = IR_ATAS.readSync();\nstate_IR_BAWAH = IR_BAWAH.readSync();\nprevCount = Date.now();\nlet stopTimer = Date.now();\ncount = 0;\n\nwhile (count < timer && Date.now()-stopTimer < 5000) {\n    state_IR_ATAS = IR_ATAS.readSync();\n    state_IR_BAWAH = IR_BAWAH.readSync();\n    if (state_IR_ATAS === 1 || state_IR_BAWAH === 1) {\n        if (!counting) {\n            counting = true;\n            prevCount = Date.now() - count;\n        }\n        stopTimer = Date.now();\n        count = Date.now() - prevCount;\n        Relay.writeSync(1);\n    }\n    else {\n        if (counting) {\n            counting = false;\n        }\n        Relay.writeSync(0);\n    }\n    // setTimeout(() => {\n    //     count += 10;\n    // }, 10);\n}\n\nRelay.writeSync(0);\n\nconst d = new Date();\n\nmsg.payload = {\n    finish: 'done',\n    time: d.getHours() + \":\" + d.getMinutes() + \":\" + d.getSeconds(),\n    date: d.getFullYear() + \"-\" + d.getMonth() + \"-\" + d.getDate(),\n    volume: 250,\n    temperature: 'normal'\n}\n\nreturn msg",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "onoff",
                "module": "onoff"
            }
        ],
        "x": 1720,
        "y": 160,
        "wires": [
            [
                "eb7f14736e65d017"
            ]
        ]
    },
    {
        "id": "dc639336ccb6d507",
        "type": "function",
        "z": "93cd7eb94b5de81b",
        "g": "d578f4fe739b97e1",
        "name": "Set Relay Time",
        "func": "\nlet pin_IR_ATAS = 18;\nlet pin_IR_BAWAH = 23;\nlet pin_Relay = 24;\nlet count = 0;\nlet timer = msg.payload * 1000;\nlet counting = false;\nlet prevCount = 0;\nlet state_IR_ATAS = 0;\nlet state_IR_BAWAH = 0;\n\nconst IR_ATAS = new onoff.Gpio(pin_IR_ATAS, 'in', 'both');\nconst IR_BAWAH = new onoff.Gpio(pin_IR_BAWAH, 'in', 'both');\nconst Relay = new onoff.Gpio(pin_Relay, 'out');\n\nstate_IR_ATAS = IR_ATAS.readSync();\nstate_IR_BAWAH = IR_BAWAH.readSync();\nprevCount = Date.now();\nlet stopTimer = Date.now();\ncount = 0;\n\nwhile (count < timer && Date.now()-stopTimer < 5000) {\n    state_IR_ATAS = IR_ATAS.readSync();\n    state_IR_BAWAH = IR_BAWAH.readSync();\n    if (state_IR_ATAS === 1 || state_IR_BAWAH === 1) {\n        if (!counting) {\n            counting = true;\n            prevCount = Date.now() - count;\n        }\n        stopTimer = Date.now();\n        count = Date.now() - prevCount;\n        Relay.writeSync(1);\n    }\n    else {\n        if (counting) {\n            counting = false;\n        }\n        Relay.writeSync(0);\n    }\n    // setTimeout(() => {\n    //     count += 10;\n    // }, 10);\n}\n\nRelay.writeSync(0);\n\nconst d = new Date();\n\nmsg.payload = {\n    finish: 'done',\n    time: d.getHours() + \":\" + d.getMinutes() + \":\" + d.getSeconds(),\n    date: d.getFullYear() + \"-\" + d.getMonth() + \"-\" + d.getDate(),\n    volume: 250,\n    temperature: 'cold'\n}\n\n\nreturn msg",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "onoff",
                "module": "onoff"
            }
        ],
        "x": 1720,
        "y": 200,
        "wires": [
            [
                "312281ef99a7932b"
            ]
        ]
    },
    {
        "id": "7de43cfe5c5c9225",
        "type": "function",
        "z": "93cd7eb94b5de81b",
        "g": "d578f4fe739b97e1",
        "name": "Set Relay Time",
        "func": "\nlet pin_IR_ATAS = 18;\nlet pin_IR_BAWAH = 23;\nlet pin_Relay = 8;\nlet count = 0;\nlet timer = msg.payload * 1000;\nlet counting = false;\nlet prevCount = 0;\nlet state_IR_ATAS = 0;\nlet state_IR_BAWAH = 0;\n\nconst IR_ATAS = new onoff.Gpio(pin_IR_ATAS, 'in', 'both');\nconst IR_BAWAH = new onoff.Gpio(pin_IR_BAWAH, 'in', 'both');\nconst Relay = new onoff.Gpio(pin_Relay, 'out');\n\nstate_IR_ATAS = IR_ATAS.readSync();\nstate_IR_BAWAH = IR_BAWAH.readSync();\nprevCount = Date.now();\nlet stopTimer = Date.now();\ncount = 0;\n\nwhile (count < timer && Date.now()-stopTimer < 5000) {\n    state_IR_ATAS = IR_ATAS.readSync();\n    state_IR_BAWAH = IR_BAWAH.readSync();\n    if (state_IR_ATAS === 1 || state_IR_BAWAH === 1) {\n        if (!counting) {\n            counting = true;\n            prevCount = Date.now() - count;\n        }\n        stopTimer = Date.now();\n        count = Date.now() - prevCount;\n        Relay.writeSync(1);\n    }\n    else {\n        if (counting) {\n            counting = false;\n        }\n        Relay.writeSync(0);\n    }\n    // setTimeout(() => {\n    //     count += 10;\n    // }, 10);\n}\n\nRelay.writeSync(0);\n\nconst d = new Date();\n\n\nmsg.payload = {\n    finish: 'done',\n    time: d.getHours() + \":\" + d.getMinutes() + \":\" + d.getSeconds(),\n    date: d.getFullYear() + \"-\" + d.getMonth() + \"-\" + d.getDate(),\n    volume: 500,\n    temperature: 'hot'\n}\n\n\nreturn msg",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "onoff",
                "module": "onoff"
            }
        ],
        "x": 1720,
        "y": 260,
        "wires": [
            [
                "3fe8a8f19bd636d7"
            ]
        ]
    },
    {
        "id": "497afc4d7511892e",
        "type": "function",
        "z": "93cd7eb94b5de81b",
        "g": "d578f4fe739b97e1",
        "name": "Set Relay Time",
        "func": "\nlet pin_IR_ATAS = 18;\nlet pin_IR_BAWAH = 23;\nlet pin_Relay = 25;\nlet count = 0;\nlet timer = msg.payload * 1000;\nlet counting = false;\nlet prevCount = 0;\nlet state_IR_ATAS = 0;\nlet state_IR_BAWAH = 0;\n\nconst IR_ATAS = new onoff.Gpio(pin_IR_ATAS, 'in', 'both');\nconst IR_BAWAH = new onoff.Gpio(pin_IR_BAWAH, 'in', 'both');\nconst Relay = new onoff.Gpio(pin_Relay, 'out');\n\nstate_IR_ATAS = IR_ATAS.readSync();\nstate_IR_BAWAH = IR_BAWAH.readSync();\nprevCount = Date.now();\nlet stopTimer = Date.now();\ncount = 0;\n\nwhile (count < timer && Date.now()-stopTimer < 5000) {\n    state_IR_ATAS = IR_ATAS.readSync();\n    state_IR_BAWAH = IR_BAWAH.readSync();\n    if (state_IR_ATAS === 1 || state_IR_BAWAH === 1) {\n        if (!counting) {\n            counting = true;\n            prevCount = Date.now() - count;\n        }\n        stopTimer = Date.now();\n        count = Date.now() - prevCount;\n        Relay.writeSync(1);\n    }\n    else {\n        if (counting) {\n            counting = false;\n        }\n        Relay.writeSync(0);\n    }\n    // setTimeout(() => {\n    //     count += 10;\n    // }, 10);\n}\n\nRelay.writeSync(0);\n\nconst d = new Date();\n\n\nmsg.payload = {\n    finish: 'done',\n    time: d.getHours() + \":\" + d.getMinutes() + \":\" + d.getSeconds(),\n    date: d.getFullYear() + \"-\" + d.getMonth() + \"-\" + d.getDate(),\n    volume: 500,\n    temperature: 'normal'\n}\n\n\nreturn msg",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "onoff",
                "module": "onoff"
            }
        ],
        "x": 1720,
        "y": 300,
        "wires": [
            [
                "626ec8f2db706571"
            ]
        ]
    },
    {
        "id": "5dce08f35cb8b6cf",
        "type": "function",
        "z": "93cd7eb94b5de81b",
        "g": "d578f4fe739b97e1",
        "name": "Set Relay Time",
        "func": "\nlet pin_IR_ATAS = 18;\nlet pin_IR_BAWAH = 23;\nlet pin_Relay = 24;\nlet count = 0;\nlet timer = msg.payload * 1000;\nlet counting = false;\nlet prevCount = 0;\nlet state_IR_ATAS = 0;\nlet state_IR_BAWAH = 0;\n\nconst IR_ATAS = new onoff.Gpio(pin_IR_ATAS, 'in', 'both');\nconst IR_BAWAH = new onoff.Gpio(pin_IR_BAWAH, 'in', 'both');\nconst Relay = new onoff.Gpio(pin_Relay, 'out');\n\nstate_IR_ATAS = IR_ATAS.readSync();\nstate_IR_BAWAH = IR_BAWAH.readSync();\nprevCount = Date.now();\nlet stopTimer = Date.now();\ncount = 0;\n\nwhile (count < timer && Date.now()-stopTimer < 5000) {\n    state_IR_ATAS = IR_ATAS.readSync();\n    state_IR_BAWAH = IR_BAWAH.readSync();\n    if (state_IR_ATAS === 1 || state_IR_BAWAH === 1) {\n        if (!counting) {\n            counting = true;\n            prevCount = Date.now() - count;\n        }\n        stopTimer = Date.now();\n        count = Date.now() - prevCount;\n        Relay.writeSync(1);\n    }\n    else {\n        if (counting) {\n            counting = false;\n        }\n        Relay.writeSync(0);\n    }\n    // setTimeout(() => {\n    //     count += 10;\n    // }, 10);\n}\n\nRelay.writeSync(0);\n\nconst d = new Date();\n\n\nmsg.payload = {\n    finish: 'done',\n    time: d.getHours() + \":\" + d.getMinutes() + \":\" + d.getSeconds(),\n    date: d.getFullYear() + \"-\" + d.getMonth() + \"-\" + d.getDate(),\n    volume: 500,\n    temperature: 'cold'\n}\n\n\nreturn msg",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "onoff",
                "module": "onoff"
            }
        ],
        "x": 1720,
        "y": 340,
        "wires": [
            [
                "a4b0ee05af245390"
            ]
        ]
    },
    {
        "id": "cfa57155488fe092",
        "type": "rpi-gpio in",
        "z": "93cd7eb94b5de81b",
        "g": "d578f4fe739b97e1",
        "name": "IR Sensor Top",
        "pin": "23",
        "intype": "down",
        "debounce": "25",
        "read": false,
        "bcm": true,
        "x": 170,
        "y": 220,
        "wires": [
            [
                "58cd9e4840d784ae"
            ]
        ]
    },
    {
        "id": "46bc2f93d48c087d",
        "type": "function",
        "z": "93cd7eb94b5de81b",
        "g": "d578f4fe739b97e1",
        "name": "Reset Waterflow",
        "func": "msg.payload = 'resetWaterFlow';\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1140,
        "y": 340,
        "wires": [
            [
                "e70a7eac5aa1292c"
            ]
        ]
    },
    {
        "id": "42138cb1cb3b3dcd",
        "type": "function",
        "z": "93cd7eb94b5de81b",
        "g": "d578f4fe739b97e1",
        "name": "waterflow_Function v1",
        "func": "\n\nlet pulseCount = context.get('pulseCount') || 0;\nlet totalLiters = context.get('totalLiters') || 0;\nlet volumeliters = context.get('volumeliters') || 0;\nconst calibrationFactor = 1; // Ganti dengan faktor kalibrasi sensor Anda\n\nif (msg.payload === 10) {\n    totalLiters = 0;\n    volumeliters = 0;\n} \n\n// Menghitung aliran dan total liter setiap detik\nif (msg.payload === 1) { // Sensor mengirimkan pulsa (misalnya, 1) setiap kali terjadi\n    pulseCount++;\n}\n\nconst duration = 1.0; // durasi dalam detik\nlet flowRate = (pulseCount / calibrationFactor); // aliran dalam liter per detik\ntotalLiters += flowRate * duration; // hitung total liter yang sudah mengalir\nvolumeliters = totalLiters;\n\npulseCount = 0; // reset pulse count\n\n// Simpan nilai di context\ncontext.set('pulseCount', pulseCount);\ncontext.set('totalLiters', totalLiters);\ncontext.set('volumeliters', volumeliters);\n\nmsg.payload = {\n    flowRate: flowRate.toFixed(2),\n    totalLiters: totalLiters.toFixed(2),\n    volumeliters: volumeliters.toFixed(2)\n};\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "04e96e931192cd25",
        "type": "csv",
        "z": "93cd7eb94b5de81b",
        "g": "d578f4fe739b97e1",
        "name": "",
        "spec": "rfc",
        "sep": ",",
        "hdrin": "",
        "hdrout": "once",
        "multi": "one",
        "ret": "\\n",
        "temp": "time,date,volume,temperature",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 630,
        "y": 560,
        "wires": [
            [
                "f7de393883dfc617"
            ]
        ]
    },
    {
        "id": "9e715bfcb567f4aa",
        "type": "debug",
        "z": "93cd7eb94b5de81b",
        "g": "d578f4fe739b97e1",
        "name": "Out Waterflow",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1180,
        "y": 440,
        "wires": []
    },
    {
        "id": "efe3c3732c955c74",
        "type": "switch",
        "z": "93cd7eb94b5de81b",
        "g": "d578f4fe739b97e1",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 330,
        "y": 160,
        "wires": [
            [
                "a8636767bc04eb79"
            ],
            [
                "5148348cc78f8dd2"
            ]
        ]
    },
    {
        "id": "a8636767bc04eb79",
        "type": "change",
        "z": "93cd7eb94b5de81b",
        "g": "d578f4fe739b97e1",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "11",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 500,
        "y": 140,
        "wires": [
            [
                "ce57fc889764cc90"
            ]
        ]
    },
    {
        "id": "5148348cc78f8dd2",
        "type": "change",
        "z": "93cd7eb94b5de81b",
        "g": "d578f4fe739b97e1",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "10",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 500,
        "y": 180,
        "wires": [
            [
                "ce57fc889764cc90"
            ]
        ]
    }
]